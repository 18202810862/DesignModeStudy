* 1.单一原则：一个类尽量主要负责一种职责，这样每个类逻辑更加单一、代码更加简洁


* 2.开闭原则：对于扩展时开放的，对于修改是封闭的。产品升级过程中对原有代码升级、修改时，可能会将错误引入原来已经
* 测试好旧代码中，破坏原有系统。因此，代码需要变化时，应尽量通过扩展方式，当然不可避免会修改原来代码
* 重点：开闭原则的重要手段应该时通过抽象


 * 3.里氏替换原则：所有引用基类的地方必须能透明地使用其子类的对象。
 *
 * 通俗描述就是，只要父类能出现的地方子类就可以出现，而且替换为子类也不会产生任何错误。
 *
 * 核心原理就是：抽象
 *
 * 抽要依赖于继承，继承的优缺点：
 * 优点：1.代码重用，减少创建类的成本，每个子类都拥有父类的方法和属性
 *       2.子类与父类基本相似，但又与父类有所区别
 *       3.提高代码的可扩展性
 * 缺点：1.继承是侵入性的，只要继承就必须拥有父类的所有属性和方法。
 *       2.可能造成子类代码冗余、灵活性降低，因为子类必须拥有父类的属性和方法


  * 4.依赖倒置原则：定义是：使得高层次的模块不依赖于低层次的细节。
  * 依赖倒置原则是一种特定的解耦形式
  *
  * 依赖倒置原则的关键点：
  * 1.高层模块不应该依赖低层模块，两者都应该依赖其抽象
  * 2.抽象不应该依赖细节
  * 3.细节应该依赖抽象
  *
  * java中，抽象就是指接口或抽象类,细节就是实现类。模块间的依赖通过抽象发生，实现类之间不发生直接的
  * 依赖关系，其依赖关系是通过接口或抽象类产生的。
  *
  * 总结：依赖倒置原则就是高层调用时，是调用抽象（接口或抽象类），二不是调用抽象的实现（接口或抽象类
  * 的实现类）,这样抽象可以向下兼容它的实现类。
  *
  * 要想让系统变得更灵活，抽象是一种高效手段
  * 如ImageLoader中，引用的是ImageCache类，而不是直接引用它的实现类，DiskCache、MemoryCache等


  *  5.接口隔离原则：定义是：客户端不应该依赖它不需要的接口，或者说类间的依赖关系应该建立在最小的接口
  *  上。
  *
  *  总结：接口隔离原则原理就是将大的接口拆分成更小的和更具体的接口
  *
  *  目的是解开系统耦合，从而容易重构、更改和重新部署


  * 单一原则、开闭原则、里式替换法则、依赖倒置法则、接口隔离法则作为面向对象的5个基本原则
  *
  * 关键词：抽象、单一、最小化